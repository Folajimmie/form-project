{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["formReducer","state","event","Object","objectSpread","defineProperty","name","value","App","_useReducer","useReducer","_useReducer2","slicedToArray","formData","setFormData","_useState","useState","_useState2","submitting","setSubmitting","handleChange","target","react_default","a","createElement","className","onSubmit","preventDefault","setTimeout","entries","map","_ref","_ref2","key","toString","onChange","FirstName","LastName","email","gender","home","bio","cols","rows","type","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.61eeae34.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './App.css';\n\nconst formReducer = (state, event) => {\n  return{\n    ...state,\n    [event.name]: event.value\n  }\n}\n\nfunction App() {\n  const [formData, setFormData] = useReducer(formReducer, {});\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSubmitting(true);\n\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n  }\n\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n      <h1>Registration Form</h1>\n      {submitting &&\n        <div className='prompt'>\n          You are submitting the following:\n            <ul>\n              {Object.entries(formData).map(([name, value]) =>(\n                <li key={name}><strong>{name}</strong>:{value.toString()}</li>\n              ))}\n            </ul>\n        </div>\n      }\n      <div className='form-content'>\n        <div className='field'>\n          <label>\n            <p>First Name</p>\n            <input name='FirstName' onChange={handleChange} value={formData.FirstName || ''}/>\n          </label>\n        </div>\n        <div className='field'>\n          <label>\n            <p>Last Name</p>\n            <input name='LastName' onChange={handleChange} value={formData.LastName || ''}/>\n          </label>\n        </div>\n        <div className='field'>\n          <label>\n            <p>Email Address</p>\n            <input name='email' onChange={handleChange} value={formData.email || ''}/>\n          </label>\n        </div>\n        <div className='field'>\n          <label>\n            <p>Gender</p>\n            <select name='gender' onChange={handleChange} value={formData.gender || ''}>\n              <option value=\"\">--Select Gender--</option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"yes\">You can either be a male/female</option>\n            </select>\n          </label>\n        </div>\n        <div className='field'>\n          <label>\n            <p>Home Address</p>\n            <input name='home' onChange={handleChange} value={formData.home || ''}/>\n          </label>\n        </div>\n        <div className='field'>\n          <label>\n            <p>Bio</p>\n            <textarea\n                name='bio'\n                onChange={handleChange} value={formData.bio || ''}\n                cols=\"30\"\n                rows=\"10\"\n            />\n          </label>\n        </div>\n\n          <div className=\"button\">\n              <button type='submit'>Register</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}